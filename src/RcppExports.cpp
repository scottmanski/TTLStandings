// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getWins
arma::vec getWins(arma::vec PO);
RcppExport SEXP _TTLStandings_getWins(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getWins(PO));
    return rcpp_result_gen;
END_RCPP
}
// getWins2
arma::vec getWins2(arma::vec PO);
RcppExport SEXP _TTLStandings_getWins2(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getWins2(PO));
    return rcpp_result_gen;
END_RCPP
}
// getSets
arma::vec getSets(arma::vec PO);
RcppExport SEXP _TTLStandings_getSets(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getSets(PO));
    return rcpp_result_gen;
END_RCPP
}
// getSets2
arma::vec getSets2(arma::vec PO);
RcppExport SEXP _TTLStandings_getSets2(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getSets2(PO));
    return rcpp_result_gen;
END_RCPP
}
// getSetWins
arma::vec getSetWins(arma::vec PO);
RcppExport SEXP _TTLStandings_getSetWins(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getSetWins(PO));
    return rcpp_result_gen;
END_RCPP
}
// getSetWins2
arma::vec getSetWins2(arma::vec PO);
RcppExport SEXP _TTLStandings_getSetWins2(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getSetWins2(PO));
    return rcpp_result_gen;
END_RCPP
}
// getOPScores
arma::vec getOPScores(arma::mat Sets, arma::vec Wins);
RcppExport SEXP _TTLStandings_getOPScores(SEXP SetsSEXP, SEXP WinsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sets(SetsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Wins(WinsSEXP);
    rcpp_result_gen = Rcpp::wrap(getOPScores(Sets, Wins));
    return rcpp_result_gen;
END_RCPP
}
// getStandings
arma::vec getStandings(arma::vec PO);
RcppExport SEXP _TTLStandings_getStandings(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getStandings(PO));
    return rcpp_result_gen;
END_RCPP
}
// getStandings2
arma::vec getStandings2(arma::vec PO);
RcppExport SEXP _TTLStandings_getStandings2(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getStandings2(PO));
    return rcpp_result_gen;
END_RCPP
}
// getAllStandings
arma::mat getAllStandings(arma::mat PO);
RcppExport SEXP _TTLStandings_getAllStandings(SEXP POSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type PO(POSEXP);
    rcpp_result_gen = Rcpp::wrap(getAllStandings(PO));
    return rcpp_result_gen;
END_RCPP
}
// formatTime
String formatTime(int time);
RcppExport SEXP _TTLStandings_formatTime(SEXP timeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type time(timeSEXP);
    rcpp_result_gen = Rcpp::wrap(formatTime(time));
    return rcpp_result_gen;
END_RCPP
}
// getAllCombs
arma::mat getAllCombs(arma::mat W, int total, bool verbose);
RcppExport SEXP _TTLStandings_getAllCombs(SEXP WSEXP, SEXP totalSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type total(totalSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(getAllCombs(W, total, verbose));
    return rcpp_result_gen;
END_RCPP
}
// getAllCombs2
arma::mat getAllCombs2(arma::mat W, int total, bool verbose);
RcppExport SEXP _TTLStandings_getAllCombs2(SEXP WSEXP, SEXP totalSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< int >::type total(totalSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(getAllCombs2(W, total, verbose));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _TTLStandings_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TTLStandings_getWins", (DL_FUNC) &_TTLStandings_getWins, 1},
    {"_TTLStandings_getWins2", (DL_FUNC) &_TTLStandings_getWins2, 1},
    {"_TTLStandings_getSets", (DL_FUNC) &_TTLStandings_getSets, 1},
    {"_TTLStandings_getSets2", (DL_FUNC) &_TTLStandings_getSets2, 1},
    {"_TTLStandings_getSetWins", (DL_FUNC) &_TTLStandings_getSetWins, 1},
    {"_TTLStandings_getSetWins2", (DL_FUNC) &_TTLStandings_getSetWins2, 1},
    {"_TTLStandings_getOPScores", (DL_FUNC) &_TTLStandings_getOPScores, 2},
    {"_TTLStandings_getStandings", (DL_FUNC) &_TTLStandings_getStandings, 1},
    {"_TTLStandings_getStandings2", (DL_FUNC) &_TTLStandings_getStandings2, 1},
    {"_TTLStandings_getAllStandings", (DL_FUNC) &_TTLStandings_getAllStandings, 1},
    {"_TTLStandings_formatTime", (DL_FUNC) &_TTLStandings_formatTime, 1},
    {"_TTLStandings_getAllCombs", (DL_FUNC) &_TTLStandings_getAllCombs, 3},
    {"_TTLStandings_getAllCombs2", (DL_FUNC) &_TTLStandings_getAllCombs2, 3},
    {"_TTLStandings_rcpp_hello_world", (DL_FUNC) &_TTLStandings_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_TTLStandings(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
